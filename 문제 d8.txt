행단위 트리거 문제1);
매입 테이블에 행 INSERT -> 재고 테이블 UPDATE
 
행단위 트리거 문제2);
장바구니 테이블에 이벤트 발생 (INSERT, UPDATE, DELETE)
-> 재고 테이블 UPDATE


- 행단위 트리거
사용예);
매입테이블에서 2005년 4월 16일 상품 'P101000001'을 매입한 다음 -- 매입테이블에 상품 INSERT
재고수량을 UPDATE 하시오.
[매입정보]
1.상품코드 : 'P101000001'
2.날짜 : 20050416
3. 매입수량 : 5
4. 단가 : 210000

(트리거 생성)
CREATE OR REPLACE TRIGGER TG_REMAIN_UPDATE
    AFTER INSERT OR UPDATE OR DELETE ON BUYPROD -- BUYPROD 매입장, 매입정보가 저장되는 곳 <-> CART 매출장
    FOR EACH ROW
BEGIN
    UPDATE REMAIN  -- REMAIN_J_99 현재 재고
       SET (REMAIN_I, REMAIN_J_99, REMAIN_DATE)
         = (SELECT REMAIN_I + :NEW.BUY_QTY, REMAIN_J_99 + :NEW.BUY_QTY, '20050416'
              FROM REMAIN
             WHERE REMAIN_YEAR = '2005'
               -- AND REMAIN_DATE = TO_DATE('20050416')
               AND PROD_ID = :NEW.BUY_PROD) -- NEW : 한 행 전체를 의미, 컬럼 접근 -> NEW.컬럼이름
     
     WHERE REMAIN_YEAR = '2005'
                -- AND REMAIN_DATE = TO_DATE('20050416')
                AND PROD_ID = :NEW.BUY_PROD;
END;

-- 바뀌기 전 데이터 확인    
SELECT * FROM REMAIN ORDER BY PROD_ID;    

-- BUYPROD 테이블에 값 넣기 -> 트리거 발생 -> REMAIN 테이블 업데이트
INSERT INTO BUYPROD
    VALUES(TO_DATE('20050416','YYYYMMDD'),'P101000001',5,210000);

-- 바뀐 데이터 확인    
SELECT * FROM REMAIN ORDER BY PROD_ID;    



사용예1); 장바구니 테이블에 신규 판매자료가 삽입될 때 재고를 처리하는 트리거를 작성

(트리거 작성)
CREATE OR REPLACE TRIGGER TG_REMAIN_CART_UPDATE
    AFTER INSERT OR UPDATE OR DELETE ON CART
    FOR EACH ROW
DECLARE -- 트리거에서 변수 선언할 필요가 있을 때, 이렇게 DECLARE 블록 사용
    V_QTY CART.CART_QTY%TYPE;
    V_PROD PROD.PROD_ID%TYPE;
BEGIN
    IF INSERTING THEN
        V_QTY := :NEW.CART_QTY;
        V_PROD := :NEW.CART_PROD;
    ELSIF UPDATING THEN
        V_QTY := :NEW.CART_QTY - :OLD.CART_QTY;   
        V_PROD := :NEW.CART_PROD; -- PROD는 변동X
    ELSE -- DELETING
        V_QTY := -(:OLD.CART_QTY);
        V_PROD := :OLD.CART_PROD;
    END IF;
    UPDATE REMAIN
       SET REMAIN_O = REMAIN_O + V_QTY, -- 재고 테이블에 OUT되는 수만큼 표시해야 해서 + V_QTY가 맞고
           REMAIN_J_99 = REMAIN_J_99 - V_QTY, -- 재고 테이블에 남아있는 건, V_QTY만큼 나가는 거니까 -V_QTY가 맞다
           REMAIN_DATE = SYSDATE
     WHERE REMAIN_YEAR = '2005'
       AND PROD_ID = V_PROD;
       
    DBMS_OUTPUT.PUT_LINE(V_PROD||'상품 재고수량 변동 : '||V_QTY);
END;

(INSERT - INSERTING)
'a001'회원이 상품 'P101000003'을 5개 구매한 경우
INSERT INTO cart
    VALUES('a001', '2021041200001', 'P101000003', 5); -- => :NEW
-- 값 넣기 전에 기존값 확인 -- 15 21 0 36
SELECT * 
  FROM REMAIN 
 WHERE prod_id = 'P101000003';
 -- 변경 후 -- 15 21 5 31
 
COMMIT;

SELECT * FROM cart;
SELECT * FROM REMAIN ORDER BY REMAIN_DATE DESC;


(UPDATE - UPDATING)
UPDATE CART
   SET CART_QTY = 7
 WHERE CART_NO = '2021041200001'
   AND CART_PROD = 'P101000003';
   
-- 데이터 이상해서 강제 수정   
--UPDATE REMAIN
--   SET REMAIN_O = 0,
--       REMAIN_J_99 = 36
-- WHERE PROD_ID = 'P101000003'; 
 
COMMIT;
   
SELECT *
  FROM CART
 WHERE CART_NO = '2021041200001'
   AND CART_PROD = 'P101000003';
 
SELECT * 
  FROM REMAIN 
 WHERE REMAIN_YEAR = '2005'
   AND prod_id = 'P101000003';


(DELETE - DELETING)
DELETE CART 
 WHERE CART_NO = '2021041200001'
   AND CART_PROD = 'P101000003';

SELECT * 
  FROM REMAIN 
 WHERE prod_id = 'P101000003';

ROLLBACK;


//다음 시간 숙제
문제);
'f001'회원이 오늘 상품 'P202000001'을 15개 구매했을 때
이 정보를 cart 테이블에 저장한 후 재고수불 테이블과 회원테이블(마일리지)를
변경하는 트리거를 작성하시오.